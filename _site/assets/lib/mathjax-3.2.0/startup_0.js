dTimes\"))"],["Rule","function-prefix-simple-arg","default","[n] children/*[1]; [n] children/*[2]","self::appl","@role=\"prefix function\"","name(children/*[2])=\"fenced\"","contains(children/*[2]/children/*[1]/@annotation, \"clearspeak:simple\")","name(children/*[2]/children/*[1])!=\"number\"","name(children/*[2]/children/*[1])!=\"identifier\"","name(children/*[2]/children/*[1])!=\"appl\""],["Rule","function-prefix-embell","default","[p] (pause:\"short\"); [n] children/*[1]; [n] children/*[2] (pause:\"short\")","self::appl","@role=\"prefix function\"","name(children/*[1])!=\"function\""],["Rule","function-prefix-fenced-or-frac-arg","default","[p] (pause:\"short\"); [n] children/*[1]; [t] \"का फलन\"; [n] children/*[2] (pause:\"short\")","self::appl","@role=\"prefix function\"","(name(children/*[2])=\"fenced\" and not(contains(children/*[2]/children/*[1]/@annotation, \"clearspeak:simple\"))) or name(children/*[2])=\"fraction\" or (name(children/*[2])!=\"fenced\" and not(contains(children/*[2]/@annotation, \"clearspeak:simple\")))","self::*"],["Rule","function-prefix-subscript","default","[p] (pause:\"short\"); [n] children/*[1]; [t] \"का फलन\" (pause:\"short\"); [n] children/*[2] (pause:\"short\")","self::appl","@role=\"prefix function\"","name(children/*[1])=\"subscript\"","self::*"],["Rule","function-ln","default","[n] children/*[1]; [n] children/*[2]","self::appl","@role=\"prefix function\"","content/*[2][text()=\"ln\"]","not(following-sibling::*)","not(contains(@grammar, \"NatLog\"))"],["Rule","function-ln","default","[n] children/*[1]; [n] children/*[2] (pause:\"short\")","self::appl","@role=\"prefix function\"","content/*[2][text()=\"ln\"]","not(contains(@grammar, \"NatLog\"))"],["Rule","function-ln","default","[n] children/*[1]; [t] \"का फलन\"; [n] children/*[2] (pause:\"short\")","self::appl","@role=\"prefix function\"","content/*[2][text()=\"ln\"]","name(children/*[2])=\"fenced\"","not(contains(@grammar, \"NatLog\"))"],["Rule","function-ln","Log_LnAsNaturalLog","[n] . (grammar:NatLog)","self::appl","@role=\"prefix function\"","content/*[2][text()=\"ln\"]","not(following-sibling::*)","not(contains(@grammar, \"NatLog\"))"],["Rule","function-ln","Log_LnAsNaturalLog","[n] . (pause:\"short\", grammar:NatLog)","self::appl","@role=\"prefix function\"","content/*[2][text()=\"ln\"]","not(contains(@grammar, \"NatLog\"))"],["Rule","function-prefix-as-exp","default","[n] children/*[1]; [t] \"का फलन\" (pause:\"short\"); [n] children/*[2] (pause:\"short\")","self::appl","@role=\"prefix function\"","name(parent::*/parent::*)=\"superscript\"","not(following-sibling::*)","(name(children/*[2])=\"fenced\" and not(contains(children/*[2]/children/*[1]/@annotation, \"clearspeak:simple\"))) or name(children/*[2])=\"fraction\" or (name(children/*[2])!=\"fenced\" and not(contains(children/*[2]/@annotation, \"clearspeak:simple\")))"],["Rule","function-prefix-subscript-as-exp","default","[n] children/*[1]; [t] \"का फलन\" (pause:\"short\"); [n] children/*[2] (pause:\"short\")","self::appl","@role=\"prefix function\"","name(parent::*/parent::*)=\"superscript\"","not(following-sibling::*)","name(children/*[1])=\"subscript\""],["Rule","function-prefix-hyper","default","[p] (pause:\"short\"); [n] children/*[1]; [t] \"का फलन\"; [n] children/*[2] (pause:\"short\")","self::appl","@role=\"prefix function\"","CQFisHyperbolic"],["Rule","function-prefix-inverse","default","[p] (pause:\"short\"); [t] \"व्युत्क्रम\"; [n] children/*[1]/children/*[1]; [t] \"का फलन\"; [n] children/*[2] (pause:\"short\")","self::appl","@role=\"prefix function\"","name(children/*[1])=\"superscript\"","name(children/*[1]/children/*[2])=\"prefixop\"","children/*[1]/children/*[2][@role=\"negative\"]","children/*[1]/children/*[2]/children/*[1][text()=\"1\"]","not(contains(@grammar, \"functions_none\"))"],["Rule","appl-triginverse","Trig_TrigInverse","[p] (pause:\"short\"); [n] children/*[1]; [t] \"का फलन\"; [n] children/*[2] (pause:\"short\")","self::appl","@role=\"prefix function\"","name(children/*[1])=\"superscript\"","name(children/*[1]/children/*[2])=\"prefixop\"","children/*[1]/children/*[2][@role=\"negative\"]","children/*[1]/children/*[2]/children/*[1][text()=\"1\"]"],["Rule","function-prefix-arc-simple","Trig_ArcTrig","[p] (pause:\"short\"); [t] \"चाप\"; [n] children/*[1]/children/*[1]; [n] children/*[2] (pause:\"short\")","self::appl","@role=\"prefix function\"","name(children/*[1])=\"superscript\"","name(children/*[1]/children/*[2])=\"prefixop\"","children/*[1]/children/*[2][@role=\"negative\"]","children/*[1]/children/*[2]/children/*[1][text()=\"1\"]","not(contains(@grammar, \"functions_none\"))"],["Rule","function-prefix-arc-simple","Trig_ArcTrig","[p] (pause:\"short\"); [t] \"चाप\"; [n] children/*[1]/children/*[1] (pause:\"short\"); [n] children/*[2] (pause:\"short\")","self::appl","@role=\"prefix function\"","name(children/*[1])=\"superscript\"","name(children/*[1]/children/*[2])=\"prefixop\"","children/*[1]/children/*[2][@role=\"negative\"]","children/*[1]/children/*[2]/children/*[1][text()=\"1\"]","name(children/*[2])=\"fenced\"","children/*[2]/children/*[1][@role=\"prefix function\"]","contains(children/*[2]/children/*[1]/@annotation, \"clearspeak:simple\")","not(contains(@grammar, \"functions_none\"))"],["Rule","function-prefix-arc","Trig_ArcTrig","[p] (pause:\"short\"); [t] \"चाप\"; [n] children/*[1]/children/*[1]; [t] \"का फलन\"; [n] children/*[2] (pause:\"short\")","self::appl","@role=\"prefix function\"","name(children/*[1])=\"superscript\"","name(children/*[1]/children/*[2])=\"prefixop\"","children/*[1]/children/*[2][@role=\"negative\"]","children/*[1]/children/*[2]/children/*[1][text()=\"1\"]","not(contains(@grammar, \"functions_none\"))","(name(children/*[2])=\"fenced\" and not(contains(children/*[2]/children/*[1]/@annotation, \"clearspeak:simple\"))) or (name(children/*[2])=\"fraction\" and children/*[2][@role!=\"vulgar\"])"],["Rule","function-inverse","default","[n] children/*[1]; [t] \"प्रतिलोम\"","self::superscript","@role=\"prefix function\"","name(children/*[2])=\"prefixop\"","children/*[2][@role=\"negative\"]","children/*[2]/children/*[1][text()=\"1\"]","not(contains(@grammar, \"functions_none\"))"],["Rule","superscript-prefix-function","default","[n] children/*[1]; [n] children/*[2] (grammar:ordinal); [t] \"घातांक\"","self::superscript","@role=\"prefix function\"","name(children/*[2])=\"number\"","children/*[2][@role=\"integer\"]"],["Rule","superscript-prefix-function","default","[n] children/*[1]; [n] children/*[2] (grammar:ordinal); [t] \"घातांक\"","self::superscript","@role=\"prefix function\"","name(children/*[2])=\"identifier\""],["Rule","function-inverse","Functions_None","[n] . (grammar:functions_none)","self::superscript","@role=\"prefix function\" or @role=\"simple function\"","name(children/*[2])=\"prefixop\"","children/*[2][@role=\"negative\"]","children/*[2]/children/*[1][text()=\"1\"]","not(contains(@grammar, \"functions_none\"))"],["Rule","superscript","default","[n] children/*[1]; [t] \"का घात\" (pause:\"short\"); [n] children/*[2] (pause:\"short\"); [t] \"घातांक समाप्त\" (pause:\"short\")","self::superscript"],["Rule","superscript-simple-exponent","default","[n] children/*[1]; [t] \"का घात\"; [n] children/*[2]; [t] \"घातांक\" (pause:\"short\")","self::superscript","not(descendant::superscript)"],["Rule","superscript-simple-exponent-end","default","[n] children/*[1]; [t] \"का घात\"; [n] children/*[2]; [t] \"घातांक\"","self::superscript","not(descendant::superscript)","not(following-sibling::*)"],["Aliases","superscript-simple-exponent","self::superscript","children/superscript/children/*[2][text()=\"2\"] or children/superscript/children/*[2][text()=\"3\"]","name(children/superscript/children/*[1])=\"number\"","contains(children/superscript/children/*[1]/@annotation, \"clearspeak:simple\")"],["Aliases","superscript-simple-exponent","self::superscript","children/superscript/children/*[2][text()=\"2\"] or children/superscript/children/*[2][text()=\"3\"]","name(children/superscript/children/*[1])=\"fraction\"","contains(children/superscript/children/*[1]/@annotation, \"clearspeak:simple\")"],["Aliases","superscript-simple-exponent","self::superscript","children/superscript/children/*[2][text()=\"2\"] or children/superscript/children/*[2][text()=\"3\"]","name(children/superscript/children/*[1])=\"identifier\""],["Aliases","superscript-simple-exponent","self::superscript","children/*[2][@role=\"implicit\"]","count(children/*[2]/children/*)=2","contains(children/*[2]/children/*[1]/@annotation, \"simple\")","name(children/*[2]/children/*[2])=\"superscript\"","(name(children/*[2]/children/*[2]/children/*[1])=\"number\" and contains(children/*[2]/children/*[2]/children/*[1]/@annotation, \"clearspeak:simple\")) or name(children/*[2]/children/*[2]/children/*[1])=\"identifier\"","children/*[2]/children/*[2]/children/*[2][text()=\"2\"] or children/*[2]/children/*[2]/children/*[2][text()=\"3\"]"],["Rule","superscript-ordinal","default","[n] children/*[1]; [t] \"का घात\"; [n] children/*[2] (grammar:ordinal); [t] \"घातांक\" (pause:\"short\")","self::superscript","name(children/*[2])=\"number\"","children/*[2][@role=\"integer\"]"],["Aliases","superscript-ordinal","self::superscript","name(children/*[2])=\"identifier\"","children/*[2][@role=\"latinletter\" or @role=\"greekletter\" or @role=\"otherletter\"]"],["Rule","superscript-non-ordinal","default","[n] children/*[1]; [t] \"का घात\"; [n] children/*[2]; [t] \"घातांक\" (pause:\"short\")","self::superscript","children/*[2][@role=\"negative\"]","name(children/*[2]/children/*[1])=\"number\"","children/*[2]/children/*[1][@role=\"integer\"]"],["Rule","superscript-simple-function","default","[n] children/*[1]; [n] children/*[2] (grammar:ordinal); [t] \"घातांक\" (pause:\"short\")","self::superscript","name(children/*[1])=\"identifier\"","children/*[1][@role=\"simple function\"]","children/*[2][@role!=\"prime\"]","not(contains(@grammar, \"functions_none\"))"],["Rule","superscript-simple-function","Functions_None","[n] . (grammar:functions_none)","self::superscript","name(children/*[1])=\"identifier\"","children/*[1][@role=\"simple function\"]","not(contains(@grammar, \"functions_none\"))"],["Rule","superscript-ordinal","Exponent_Ordinal","[n] children/*[1]; [t] \"का घात\"; [n] children/*[2] (pause:\"short\", grammar:ordinal)","self::superscript","name(children/*[2])=\"number\"","children/*[2][@role=\"integer\"]"],["Rule","superscript-ordinal","Exponent_Ordinal","[n] children/*[1]; [t] \"का घात\"; [n] children/*[2] (pause:\"short\")","self::superscript","name(children/*[2])=\"prefixop\"","children/*[2][@role=\"negative\"]","name(children/*[2]/children/*[1])=\"number\"","children/*[2]/children/*[1][@role=\"integer\"]"],["Rule","superscript-ordinal","Exponent_Ordinal","[n] children/*[1]; [t] \"का घात\"; [n] children/*[2] (pause:\"short\", grammar:ordinal)","self::superscript","name(children/*[2])=\"identifier\"","children/*[2][@role=\"latinletter\" or @role=\"greekletter\" or @role=\"otherletter\"]"],["Rule","superscript-ordinal-default","Exponent_Ordinal","[n] children/*[1]; [t] \"का घात\" (pause:\"short\"); [n] children/*[2] (pause:\"short\"); [t] \"घातांक समाप्त\" (pause:\"short\")","self::superscript","children//superscript"],["Rule","superscript-ordinal","Exponent_OrdinalPower","[n] children/*[1]; [t] \"का घात\"; [n] children/*[2] (grammar:ordinal); [t] \"घातांक\" (pause:\"short\")","self::superscript","name(children/*[2])=\"number\"","children/*[2][@role=\"integer\"]"],["Rule","superscript-ordinal","Exponent_OrdinalPower","[n] children/*[1]; [t] \"का घात\"; [n] children/*[2]; [t] \"घातांक\" (pause:\"short\")","self::superscript","name(children/*[2])=\"prefixop\"","children/*[2][@role=\"negative\"]","name(children/*[2]/children/*[1])=\"number\"","children/*[2]/children/*[1][@role=\"integer\"]"],["Rule","superscript-ordinal","Exponent_OrdinalPower","[n] children/*[1]; [t] \"का घात\"; [n] children/*[2] (grammar:ordinal); [t] \"घातांक\" (pause:\"short\")","self::superscript","name(children/*[2])=\"identifier\"","children/*[2][@role=\"latinletter\" or @role=\"greekletter\" or @role=\"otherletter\"]"],["Rule","superscript-ordinal-default","Exponent_OrdinalPower","[n] children/*[1]; [t] \"का घात\" (pause:\"short\"); [n] children/*[2] (pause:\"short\"); [t] \"घातांक समाप्त\" (pause:\"short\")","self::superscript","children//superscript"],["Rule","superscript-power","Exponent_AfterPower","[n] children/*[1]; [t] \"का घात\"; [n] children/*[2] (pause:\"short\", grammar:afterPower)","self::superscript"],["Rule","superscript-power-default","Exponent_AfterPower","[n] children/*[1]; [t] \"का घात\" (pause:\"short\"); [n] children/*[2] (pause:\"short\"); [t] \"घातांक समाप्त\" (pause:\"short\")","self::superscript","children//superscript"],["Rule","exponent","default","[n] text() (join:\"-\"); [t] \"वां\"","self::identifier","contains(@grammar, \"ordinal\")"],["Rule","exponent","default","[t] CSFordinalExponent","self::number","@role=\"integer\"","contains(@grammar, \"ordinal\")","text()!=\"0\""],["Rule","exponent","Exponent_Ordinal","[t] CSFwordOrdinal","self::number","@role=\"integer\"","contains(@grammar, \"ordinal\")","text()!=\"0\""],["Rule","exponent","Exponent_Ordinal","[t] \"शून्य\"","self::number","@role=\"integer\"","contains(@grammar, \"ordinal\")","text()=\"0\""],["Rule","exponent","Exponent_OrdinalPower","[t] CSFwordOrdinal","self::number","@role=\"integer\"","contains(@grammar, \"ordinal\")","text()!=\"0\""],["Rule","exponent","Exponent_OrdinalPower","[t] \"शून्य\"","self::number","@role=\"integer\"","contains(@grammar, \"ordinal\")","text()=\"0\""],["Rule","square","default","[n] children/*[1]; [t] \"वर्गित\"","self::superscript","@role!=\"unit\"","children/*[2][text()=\"2\"]","name(children/*[1])!=\"text\" or not(name(children/*[1])=\"text\" and (name(../../../punctuated[@role=\"text\"]/..)=\"stree\" or name(..)=\"stree\"))","self::*"],["Rule","cube","default","[n] children/*[1]; [t] \"घनित\"","self::superscript","@role!=\"unit\"","children/*[2][text()=\"3\"]","name(children/*[1])!=\"text\" or not(name(children/*[1])=\"text\" and (name(../../../punctuated[@role=\"text\"]/..)=\"stree\" or name(..)=\"stree\"))","self::*"],["Rule","paren-simple","default","[n] children/*[1]","self::fenced","@role=\"leftright\"","contains(children/*[1]/@annotation, \"clearspeak:simple\")","name(../..)!=\"superscript\" and name(../..)!=\"subscript\""],["Rule","paren-simple-exp","default","[n] children/*[1]","self::fenced","@role=\"leftright\"","name(../..)=\"superscript\"","children/*[1][@role=\"integer\"] or children/*[1][@role=\"float\"] or (children/*[1][@role=\"vulgar\"] and contains(children/*[1]/@annotation, \"clearspeak:simple\")) or children/*[1][@role=\"latinletter\"] or children/*[1][@role=\"greekletter\"] or children/*[1][@role=\"otherletter\"]"],["Rule","paren-simple-nested-func","default","[n] children/*[1]","self::fenced","@role=\"leftright\"","name(../*[1])=\"identifier\" or name(../*[1])=\"function\"","parent::*/parent::*[@role=\"simple function\" or @role=\"prefix function\"]","children/*[1][@role=\"simple function\" or @role=\"prefix function\"]","contains(children/*[1]/children/*[2]/children/*[1]/@annotation, \"clearspeak:simple\") or name(children/*[1]/children/*[2]/children/*[1])=\"subscript\" or name(children/*[1]/children/*[2]/children/*[1])=\"superscript\" or children/*[1]/children/*[2]/children/*[1][@role=\"vulgar\"] "],["Rule","paren-simple-nested-func-no-bracket","Functions_None","[n] children/*[1]","self::fenced","@role=\"leftright\"","name(../*[1])=\"identifier\" or name(../*[1])=\"function\"","parent::*/parent::*[@role=\"simple function\" or @role=\"prefix function\"]","children/*[1][@role=\"simple function\" or @role=\"prefix function\"]","name(children/*[1]/children/*[1])=\"identifier\" or name(children/*[1]/children/*[1])=\"function\"","contains(children/*[1]/children/*[2]/children/*[1]/@annotation, \"clearspeak:simple\")","name(children/*[1]/children/*[2]/children/*[1])=\"identifier\" or name(children/*[1]/children/*[2]/children/*[1])=\"number\""],["Rule","fences-open-close","default","[p] (pause:\"short\"); [n] content/*[1] (pause:\"short\", grammar:spokenFence); [n] children/*[1] (pause:\"short\"); [n] content/*[2] (pause:\"short\", grammar:spokenFence)","self::fenced","@role=\"leftright\""],["Rule","paren-simple-nested-func","default","[p] (pause:\"short\"); [n] content/*[1] (pause:\"short\"); [n] children/*[1] (pause:\"short\"); [n] content/*[2] (pause:\"short\")","self::fenced","@role=\"leftright\"","name(../*[1])=\"identifier\" or name(../*[1])=\"function\"","parent::*/parent::*[@role=\"simple function\" or @role=\"prefix function\"]","not(contains(children/*[1]/@annotation, \"clearspeak:simple\"))"],["Rule","paren-simple-nested-func","Functions_None","[p] (pause:\"short\"); [n] content/*[1] (pause:\"short\", grammar:spokenFence); [n] children/*[1] (pause:\"short\"); [n] content/*[2] (pause:\"short\", grammar:spokenFence)","self::fenced","@role=\"leftright\"","name(../*[1])=\"identifier\" or name(../*[1])=\"function\"","parent::*/parent::*[@role=\"simple function\" or @role=\"prefix function\"]","children/*[1][@role=\"simple function\" or @role=\"prefix function\"]","contains(children/*[1]/children/*[2]/children/*[1]/@annotation, \"clearspeak:simple\") or name(children/*[1]/children/*[2]/children/*[1])=\"subscript\" or name(children/*[1]/children/*[2]/children/*[1])=\"superscript\" or children/*[1]/children/*[2]/children/*[1][@role=\"vulgar\"] "],["SpecializedRule","fences-open-close","default","Paren_Speak"],["Aliases","fences-open-close","self::fenced","@role=\"composed function\""],["Rule","fence-silent","Paren_Silent","[p] (pause:\"short\"); [n] children/*[1] (pause:\"short\")","self::fenced"],["Rule","fences-open-close","ImpliedTimes_None","[p] (pause:\"short\"); [n] content/*[1] (pause:\"short\", grammar:spokenFence); [n] children/*[1] (pause:\"short\"); [n] content/*[2] (pause:\"short\", grammar:spokenFence)","self::fenced","@role=\"leftright\"","parent::*/parent::*[@role!=\"simple function\"]","parent::*/parent::*[@role!=\"prefix function\"]"],["Rule","fence-nesting","Paren_SpeakNestingLevel","[n] text() (grammar:insertNesting=CSFnestingDepth)","self::fence","contains(@grammar, \"spokenFence\")","CQFmatchingFences"],["Rule","fence-no-nesting","Paren_SpeakNestingLevel","[n] text()","self::fence"],["Rule","fences-points","Paren_CoordPoint","[t] \"निर्देशांक वाला बिंदु\"; [n] children/*[1]","self::fenced","name(children/*[1])=\"punctuated\"","children/*[1][@role=\"sequence\"]"],["Rule","fences-interval","Paren_Interval","[n] children/*[1]/children/*[1]; [t] \"से\"; [n] children/*[1]/children/*[3]; [t] \"तक का अन्तराल\" (pause:\"short\"); [n] . (grammar:interval)","self::fenced","not(contains(@grammar, \"interval\"))","name(children/*[1])=\"punctuated\"","children/*[1][@role=\"sequence\"]","count(./children/*[1]/content/*)=1","children/*[1]/content/*[1][@role=\"comma\"]"],["Rule","interval-open","Paren_Interval","[n] children/*[1]/children/*[1]; [t] \"अथवा\"; [n] children/*[1]/children/*[3]; [t] \"असम्मिलित\"","self::fenced","contains(@grammar, \"interval\")","content/*[1]/text()=\"(\"","content/*[2]/text()=\")\""],["Rule","interval-closed-open","Paren_Interval","[n] children/*[1]/children/*[1]; [t] \"सम्मिलित\" (pause:\"short\"); [t] \"परन्तु\"; [n] children/*[1]/children/*[3]; [t] \"असम्मिलित\"","self::fenced","contains(@grammar, \"interval\")","content/*[1]/text()=\"[\"","content/*[2]/text()=\")\""],["Rule","interval-open-closed","Paren_Interval","[n] children/*[1]/children/*[1]; [t] \"असम्मिलित\" (pause:\"short\"); [t] \"परन्तु\"; [n] children/*[1]/children/*[3]; [t] \"सम्मिलित\"","self::fenced","contains(@grammar, \"interval\")","content/*[1]/text()=\"(\"","content/*[2]/text()=\"]\""],["Rule","interval-closed","Paren_Interval","[n] children/*[1]/children/*[1]; [t] \"और\"; [n] children/*[1]/children/*[3]; [t] \"सम्मिलित\"","self::fenced","contains(@grammar, \"interval\")","content/*[1]/text()=\"[\"","content/*[2]/text()=\"]\""],["Rule","interval-open-inf-r","Paren_Interval","[n] children/*[1]/children/*[1]; [t] \"असम्मिलित\"","self::fenced","contains(@grammar, \"interval\")","content/*[1]/text()=\"(\"","content/*[2]/text()=\")\"","children/*[1]/children/*[3]/text()=\"∞\" or (name(children/*[1]/children/*[3])=\"prefixop\" and children/*[1]/children/*[3]/children/*[1]/text()=\"∞\")"],["Rule","interval-open-inf-l","Paren_Interval","[n] children/*[1]/children/*[3]; [t] \"असम्मिलित\"","self::fenced","contains(@grammar, \"interval\")","content/*[1]/text()=\"(\"","content/*[2]/text()=\")\"","children/*[1]/children/*[1]/text()=\"∞\" or (name(children/*[1]/children/*[1])=\"prefixop\" and children/*[1]/children/*[1]/children/*[1]/text()=\"∞\")"],["Rule","interval-open-inf-lr","Paren_Interval","","self::fenced","contains(@grammar, \"interval\")","content/*[1]/text()=\"(\"","content/*[2]/text()=\")\"","children/*[1]/children/*[3]/text()=\"∞\" or (name(children/*[1]/children/*[3])=\"prefixop\" and children/*[1]/children/*[3]/children/*[1]/text()=\"∞\")","children/*[1]/children/*[1]/text()=\"∞\" or (name(children/*[1]/children/*[1])=\"prefixop\" and children/*[1]/children/*[1]/children/*[1]/text()=\"∞\")"],["Rule","interval-closed-open-inf","Paren_Interval","[n] children/*[1]/children/*[1]; [t] \"सम्मिलित\"","self::fenced","contains(@grammar, \"interval\")","content/*[1]/text()=\"[\"","content/*[2]/text()=\")\"","children/*[1]/children/*[3]/text()=\"∞\" or (name(children/*[1]/children/*[3])=\"prefixop\" and children/*[1]/children/*[3]/children/*[1]/text()=\"∞\")"],["Rule","interval-open-closed-inf","Paren_Interval","[n] children/*[1]/children/*[3]; [t] \"सम्मिलित\"","self::fenced","contains(@grammar, \"interval\")","content/*[1]/text()=\"(\"","content/*[2]/text()=\"]\"","children/*[1]/children/*[1]/text()=\"∞\" or (name(children/*[1]/children/*[1])=\"prefixop\" and children/*[1]/children/*[1]/children/*[1]/text()=\"∞\")"],["Rule","paren-nested-embellished-funcs","Functions_None","[p] (pause:\"short\"); [n] content/*[1] (pause:\"short\"); [n] children/*[1] (pause:\"short\"); [n] content/*[2] (pause:\"short\")","self::fenced","@role=\"leftright\"","name(../..)=\"appl\"","name(children/*[1]) = \"appl\"","preceding-sibling::*/descendant-or-self::*[@role=\"subsup\"] or children/*[1]/descendant-or-self::*[@role=\"subsup\"]"],["Rule","set-empty","default","[t] \"रिक्त समुच्चय\"","self::fenced","@role=\"set empty\""],["Rule","set-extended","default","[n] children/*[1]/children/*[1] (grammar:setext); [t] \"का समुच्चय\"; [t] \"जिस में\"; [n] children/*[1]/children/*[3]","self::fenced","@role=\"set extended\""],["Rule","set-collection","default","[t] \"समुच्चय\"; [n] children/*[1]","self::fenced","@role=\"set collection\""],["Aliases","set-collection","self::fenced","@role=\"set singleton\""],["Rule","set-collection","Sets_SilentBracket","[n] children/*[1]","self::fenced","@role=\"set collection\""],["Rule","subscript","default","[p] (pause:short); [n] children/*[1]; [t] \"पाद\"; [n] children/*[2] (pause:short)","self::subscript"],["Rule","subscript-base","default","[n] children/*[1]; [t] \"आधार\"; [n] children/*[2]","self::subscript","CQFisLogarithm"],["Rule","subscript-index","default","[n] children/*[1]; [t] \"पाद\"; [n] children/*[2]","self::subscript","contains(@grammar, \"simpleDet\")"],["Rule","fraction","default","[p] (pause:short); [t] \"भिन्न जिसका अंश\"; [n] children/*[1] (pause:short); [t] \"और हर\"; [n] children/*[2] (pause:short)","self::fraction"],["Rule","fraction","Functions_None","[p] (pause:short); [t] \"भिन्न जिसका अंश\"; [n] children/*[1] (pause:short); [t] \"और हर\"; [n] children/*[2] (pause:short)","self::fraction","name(children/*[1])=\"appl\" or name(children/*[2])=\"appl\""],["Rule","simple-fraction","default","[p] (pause:short); [n] children/*[1]; [t] \"के हर में\"; [n] children/*[2] (pause:short)","self::fraction","contains(children/*[1]/@annotation, \"clearspeak:simple\") or contains(children/*[1]/@annotation, \"clearspeak:unit\")","contains(children/*[2]/@annotation, \"clearspeak:simple\") or contains(children/*[2]/@annotation, \"clearspeak:unit\")"],["Rule","simple-vulgar-fraction","default","[p] (pause:short); [n] children/*[1]; [t] \"के हर में\"; [n] children/*[2] (pause:short)","self::fraction","@role=\"vulgar\""],["Rule","simple-text-fraction","default","[p] (pause:short); [n] children/*[1]; [t] \"के हर में\"; [n] children/*[2] (pause:short)","self::fraction","name(children/*[1])=\"text\"","name(children/*[2])=\"text\""],["Rule","simple-text-fraction","default","[p] (pause:short); [n] children/*[1]; [t] \"के हर में\"; [n] children/*[2] (pause:short)","self::fraction","name(children/*[1])=\"infixop\"","children/*[1][@role=\"unit\"]","name(children/*[2])=\"text\""],["Rule","vulgar-fraction","default","[t] CSFvulgarFraction","self::fraction","@role=\"vulgar\"","CQFvulgarFractionSmall"],["Rule","fraction","Fraction_Over","[p] (pause:short); [n] children/*[1]; [t] \"के हर में\"; [n] children/*[2] (pause:short)","self::fraction"],["Rule","fraction","Fraction_OverEndFrac","[p] (pause:short); [n] children/*[1]; [t] \"के हर में\"; [n] children/*[2] (pause:short); [t] \"भिन्न समाप्त\" (pause:short)","self::fraction"],["Rule","fraction","Fraction_FracOver","[p] (pause:short); [t] \"भिन्न\"; [n] children/*[1]; [t] \"के हर में\"; [n] children/*[2] (pause:short)","self::fraction"],["Rule","fraction","Fraction_Per","[p] (pause:short); [n] children/*[1]; [t] \"प्रति\"; [n] children/*[2] (pause:short)","self::fraction"],["Rule","fraction","Fraction_GeneralEndFrac","[p] (pause:short); [t] \"भिन्न जिसका अंश\"; [n] children/*[1] (pause:short); [t] \"और हर\"; [n] children/*[2] (pause:short); [t] \"भिन्न समाप्त\" (pause:short)","self::fraction"],["Rule","fraction","Fraction_General","[p] (pause:short); [t] \"भिन्न जिसका अंश\"; [n] children/*[1] (pause:short); [t] \"और हर\"; [n] children/*[2] (pause:short)","self::fraction"],["Rule","simple-vulgar-fraction","Fraction_Ordinal","[t] CSFvulgarFraction","self::fraction","@role=\"vulgar\""],["Rule","fraction","Fraction_EndFrac","[p] (pause:short); [n] . (grammar:endfrac); [t] \"भिन्न समाप्त\" (pause:short)","self::fraction","not(contains(@grammar, \"endfrac\"))","not(contains(children/*[1]/@annotation, \"clearspeak:unit\"))","not(contains(children/*[2]/@annotation, \"clearspeak:unit\"))"],["Rule","vulgar-fraction","Fraction_EndFrac","[p] (pause:short); [n] children/*[1]; [t] \"के हर में\"; [n] children/*[2] (pause:short)","self::fraction","name(children/*[1])=\"fraction\"","name(children/*[2])=\"fraction\"","contains(children/*[1]/@annotation, \"clearspeak:simple\")","contains(children/*[2]/@annotation, \"clearspeak:simple\")"